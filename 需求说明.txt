以下是将原本基于 SwiftUI + Apple 生态的账号密码管理应用需求，改写为面向 Web 平台，使用 React + TypeScript + Vite 技术栈的版本：

⸻

账号密码管理 Web 应用需求文档（基于 React + TypeScript + Vite）

一、项目简介

本项目是一款基于 Web 平台开发的账号密码管理应用，采用 React + TypeScript + Vite 技术栈，目标是为用户提供安全、高效、跨平台（浏览器可访问）的账号密码管理工具。后续可拓展至 PWA（Progressive Web App）以支持安装至桌面或移动设备。

⸻

二、核心需求

1. 跨平台支持
	•	支持主流桌面与移动端浏览器访问（Chrome、Safari、Edge 等）；
	•	可选支持 PWA 模式，实现「类原生应用体验」（支持离线访问、图标安装等）；
	•	使用响应式布局适配不同屏幕尺寸（PC、平板、手机）；

2. 基础功能模块

2.1 账号信息管理
	•	支持添加多个账号记录，包含以下字段：
	•	平台名称（如 GitHub、Google 等）
	•	用户名 / 邮箱 / 手机号
	•	密码
	•	备注信息
	•	标签（如「工作」、「个人」、「游戏」等，可选）
	•	支持编辑、删除账号记录；
	•	支持模糊搜索、标签筛选等功能；

2.2 快捷操作
	•	每个账号项支持一键复制用户名和密码至剪贴板；
	•	可配置「一键登录网址」，点击后自动复制并跳转对应链接；

2.3 数据同步
	•	支持用户账号系统（如使用 Firebase Auth、Supabase Auth 或 OAuth 第三方登录）；
	•	数据同步通过后端 API 实现跨设备同步，可选使用 Supabase、Firebase、或自建服务；
	•	支持离线操作与自动同步机制（IndexedDB + 本地状态缓存）；

2.4 登录 / 身份验证
	•	用户首次使用需注册/登录账号（邮箱、社交账号登录等）；
	•	支持登录状态持久化（JWT / OAuth）；
	•	支持用户启用应用层密码锁，结合浏览器提供的 WebAuthn 或本地密码进行身份验证；
	•	支持访客模式，仅在当前会话中本地存储账号数据，关闭浏览器后自动清除；

⸻

三、界面设计需求

1. 风格
	•	采用简洁、现代化 UI 风格（推荐使用 Tailwind CSS）；
	•	支持浅色 / 深色模式（基于系统偏好或用户设置）；
	•	提供统一的组件库（可使用 shadcn/ui、Radix UI 等）以保证一致性；

2. 用户体验
	•	添加账号流程不超过两步；
	•	支持滑动删除（移动端）、长按菜单、右键菜单（桌面端）等常见交互；
	•	支持快捷键操作：
	•	Ctrl/Cmd + N：新增账号
	•	Ctrl/Cmd + F：搜索
	•	Esc：关闭弹窗/返回主界面等

⸻

四、安全性需求
	•	所有账号密码信息均使用前端本地加密（建议使用 crypto.subtle API 或 libsodium 等加密库）；
	•	支持主密码机制：所有数据加密密钥由用户设置的主密码派生（PBKDF2 / Argon2）；
	•	剪贴板敏感信息支持 60 秒自动清除机制（可通过计时器控制）；
	•	所有同步数据应在客户端加密，后端仅存储密文（端到端加密）；

⸻

五、可扩展功能建议（后续迭代）
	1.	密码生成器：支持生成复杂密码并自定义规则（长度、字符集等）；
	2.	账号导入导出：支持 CSV / JSON 格式；
	3.	账号历史记录与版本回退：支持误删恢复；
	4.	密码更新提醒：如某账号密码超过设定天数，自动提醒；
	5.	多用户支持：同一浏览器下切换不同用户账户；
	6.	PWA 桌面图标与快捷方式支持；
	7.	标签管理与文件夹分组：适用于账号较多的用户；

⸻

六、非功能性需求
	•	启动速度：页面初次加载时间 ≤ 2 秒（采用懒加载、代码拆分等技术优化）；
	•	兼容性：兼容主流浏览器（Chrome 100+、Safari 15+、Edge 100+）；
	•	响应速度：用户界面交互响应时间 ≤ 100ms；
	•	国际化支持：初期支持中英文（可使用 i18next / react-intl 实现多语言切换）；

⸻